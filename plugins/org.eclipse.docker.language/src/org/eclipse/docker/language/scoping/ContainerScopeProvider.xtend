/*
 * generated by Xtext 2.9.1
 */
package org.eclipse.docker.language.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import org.eclipse.docker.language.container.ContainerPackage
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.xtext.EcoreUtil2
import org.eclipse.docker.language.container.Docker
import org.eclipse.docker.language.ContainerRuntimeModule
import org.eclipse.docker.language.container.RunContainerDefination

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class ContainerScopeProvider extends AbstractContainerScopeProvider {
	
	override getScope(EObject context, EReference reference) {
		var scope = super.getScope(context, reference)
		if (reference == ContainerPackage.eINSTANCE.runContainerDefination_Sequence) {
			var containers = (EcoreUtil2.getRootContainer(context) as Docker).containerRegion.containers;
			return Scopes.scopeFor(containers,scope)
		}
		if (reference == ContainerPackage.eINSTANCE.buildImagesExecution_Sequence) {
			var images = (EcoreUtil2.getRootContainer(context) as Docker).imageRegion.images;
			return Scopes.scopeFor(images,scope)
		}
		scope
	}

}
